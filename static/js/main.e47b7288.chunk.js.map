{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","submitHandler","todo","setTodo","editId","className","onSubmit","type","placeholder","value","onChange","e","target","TodoList","todos","deleteHandler","editHandler","map","t","onClick","id","App","useState","setTodos","setEditId","preventDefault","editTodo","find","i","updatedTodo","Date","now","deletedTodo","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAgBeA,EAdE,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,cAAcC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,QAAQC,EAAY,EAAZA,OAC1C,OACI,uBAAMC,UAAU,cAChBC,SAAUL,EADV,UAEI,uBAAOM,KAAK,OAAOC,YAAY,kBAAkBC,MAAOP,EACxDQ,SAAU,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAOH,UAClC,wBAAQF,KAAK,SAAb,SACKH,EAAS,SAAU,YCQrBS,EAfE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACtC,OACI,oBAAIX,UAAU,cAAd,SACKS,EAAMG,KAAI,SAACC,GAAD,OACP,qBAAIb,UAAU,WAAd,UACI,sBAAMA,UAAU,YAAhB,SAA6Ba,EAAEhB,OAC/B,wBAAQiB,QAAS,kBAAMH,EAAYE,EAAEE,KAArC,kBACA,wBAAQD,QAAS,kBAAMJ,EAAcG,EAAEE,KAAvC,sBAH0BF,EAAEE,UC6CjCC,MA9Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaC,EAAb,KACA,EAA0BmB,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOlB,EAAP,KAAeoB,EAAf,KAgCF,OACE,qBAAKnB,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACC,uDACA,cAAC,EAAD,CAAUJ,cAlCQ,SAACU,GAGnB,GAFAA,EAAEc,iBAECrB,EAAO,CACR,IAAMsB,EAAWZ,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAER,KAAKhB,KACpCyB,EAAcf,EAAMG,KAAI,SAACC,GAAD,OAAMA,EAAEE,KAAOM,EAASN,GAAMF,EAAE,CAACE,GAAGF,EAAEE,GAAIlB,QACpE,CAACkB,GAAIF,EAAEE,GAAIlB,KAAKgB,EAAEhB,SAKpB,OAJAqB,EAASM,GACT1B,EAAQ,SACRqB,EAAU,GAMJ,KAAPtB,GAEDqB,EAAS,CAAC,CAACH,GAAG,GAAD,OAAIlB,EAAJ,aAAa4B,KAAKC,OAAQ7B,SAA/B,mBAAwCY,KAElDX,EAAQ,KAgBPD,KAAMA,EAAMC,QAASA,EAASC,OAAQA,IACvC,cAAC,EAAD,CAAUU,MAAOA,EAAOC,cAfJ,SAACK,GACpB,IAAMY,EAAalB,EAAMmB,QAAO,SAACf,GAAD,OAAOA,EAAEE,KAAOA,KAChDG,EAAS,YAAIS,KAawChB,YAXpC,SAACI,GACnB,IAAMM,EAAWZ,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAER,KAAKA,KAC1CjB,EAAQuB,EAASxB,MACjBsB,EAAUE,EAASN,aCjCvBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e47b7288.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TodoForm = ({submitHandler,todo,setTodo,editId}) => {\r\n    return (\r\n        <form className='formControl'\r\n        onSubmit={submitHandler}>\r\n            <input type=\"text\" placeholder=\"Enter Your Todo\" value={todo}\r\n            onChange={(e) => setTodo(e.target.value)}/>\r\n            <button type=\"submit\">\r\n                {editId ? 'Update': 'Add'}\r\n                </button>\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react'\r\n\r\nconst TodoList = ({ todos, deleteHandler, editHandler }) => {\r\n    return (\r\n        <ul className=\"listControl\">\r\n            {todos.map((t) => (\r\n                <li className=\"listItem\" key={t.id}>\r\n                    <span className=\"listTitle\">{t.todo}</span>\r\n                    <button onClick={() => editHandler(t.id)}>Edit</button>\r\n                    <button onClick={() => deleteHandler(t.id)}>Delete</button>\r\n                </li>\r\n                ))}\r\n            \r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport {useState} from 'react';\n\nfunction App() {\n  const [todo, setTodo] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [editId, setEditId] = useState(0);\n\n  const submitHandler=(e)=>{\n    e.preventDefault();\n\n    if(editId){\n      const editTodo = todos.find((i) => i.id===editId);\n      const updatedTodo = todos.map((t)=> t.id === editTodo.id ? (t={id:t.id, todo})\n        :({id: t.id, todo:t.todo}));\n        setTodos(updatedTodo);\n        setTodo('');\n        setEditId(0);\n\n        return;\n    }\n  \n\n    if(todo!==''){\n      // eslint-disable-next-line\n      setTodos([{id:`${todo}--${Date.now()}`,todo},...todos]);\n    }\n    setTodo('');//To make the field empty after adding\n  };\n  const deleteHandler = (id) => {\n     const deletedTodo= todos.filter((t) => t.id !== id);\n     setTodos([...deletedTodo]);\n  };\n  const editHandler = (id) => {\n    const editTodo = todos.find((i) => i.id===id);\n    setTodo(editTodo.todo);\n    setEditId(editTodo.id);\n  };\nreturn (\n  <div className=\"App\">\n   <div className=\"container\">\n    <h1>Todo List Application</h1>\n    <TodoForm submitHandler={submitHandler}\n     todo={todo} setTodo={setTodo} editId={editId}/>\n    <TodoList todos={todos} deleteHandler={deleteHandler} editHandler={editHandler}/>\n   </div>\n  </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}